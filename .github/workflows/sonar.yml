name: SonarCloud Scan

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Run SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
        with:
          args: >
            -Dsonar.projectKey=RADhaigude_invoice-generator-react
            -Dsonar.organization=radhaigude
            -Dsonar.sources=.

      # 5️⃣ Fetch New Code Quality Gate JSON
      - name: Fetch New Code Quality Gate status
        run: |
          curl -s -u ${{ secrets.SONAR_TOKEN }}: \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=RADhaigude_invoice-generator-react" \
            -o sonar_quality_gate.json
          cat sonar_quality_gate.json

      # 6️⃣ Fetch Overall Metrics JSON
      - name: Fetch Overall Project Metrics
        run: |
          curl -s -u ${{ secrets.SONAR_TOKEN }}: \
            "https://sonarcloud.io/api/measures/component?component=RADhaigude_invoice-generator-react&metricKeys=reliability_rating,security_rating,maintainability_rating,coverage,duplicated_lines_density,sqale_index,security_hotspots_reviewed" \
            -o sonar_overall_metrics.json
          cat sonar_overall_metrics.json

      # 7️⃣ Convert JSON to HTML (New Code + Overall)
      - name: Convert SonarCloud JSON to HTML
        run: |
          echo "<html><head><title>SonarCloud Quality Gate</title></head><body>" > sonar_quality_gate.html
          echo "<h1>SonarCloud Scan - Quality Gate Status: $(jq -r '.projectStatus.status' sonar_quality_gate.json)</h1>" >> sonar_quality_gate.html

          # --- New Code Metrics Table ---
          echo "<h2>New Code Metrics</h2>" >> sonar_quality_gate.html
          echo "<table border='1' cellpadding='5' cellspacing='0'><tr><th>Metric</th><th>Status</th><th>Actual Value</th><th>Error Threshold</th></tr>" >> sonar_quality_gate.html
          jq -c '.projectStatus.conditions[]' sonar_quality_gate.json | while read row; do
            METRIC=$(echo $row | jq -r '.metricKey')
            STATUS=$(echo $row | jq -r '.status')
            ACTUAL=$(echo $row | jq -r '.actualValue')
            THRESHOLD=$(echo $row | jq -r '.errorThreshold')
            echo "<tr><td>$METRIC</td><td>$STATUS</td><td>$ACTUAL</td><td>$THRESHOLD</td></tr>" >> sonar_quality_gate.html
          done
          echo "</table>" >> sonar_quality_gate.html

          # --- Overall Metrics Table ---
          echo "<h2>Overall Metrics</h2>" >> sonar_quality_gate.html
          echo "<table border='1' cellpadding='5' cellspacing='0'><tr><th>Metric</th><th>Value</th></tr>" >> sonar_quality_gate.html
          jq -r '.component.measures[] | "<tr><td>\(.metric)</td><td>\(.value)</td></tr>"' sonar_overall_metrics.json >> sonar_quality_gate.html
          echo "</table>" >> sonar_quality_gate.html

          echo "</body></html>" >> sonar_quality_gate.html

      # 8️⃣ Upload JSON Artifacts
      - name: Upload JSON Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sonar-quality-gate-json
          path: |
            sonar_quality_gate.json
            sonar_overall_metrics.json

      # 9️⃣ Upload HTML Artifact
      - name: Upload HTML Quality Gate
        uses: actions/upload-artifact@v4
        with:
          name: sonar-quality-gate-html
          path: sonar_quality_gate.html

