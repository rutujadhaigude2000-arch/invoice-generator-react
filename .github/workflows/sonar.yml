name: CI / SonarCloud Scan

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - master

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3️⃣ Cache Node.js dependencies
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 5️⃣ Run tests with coverage (pipeline continues even if no tests)
      - name: Run tests with coverage
        run: npm test -- --coverage --watchAll=false --passWithNoTests || true

      # 6️⃣ Build project
      - name: Build project
        run: |
          CI=false npm run build --if-present
        env:
          NODE_OPTIONS: --openssl-legacy-provider

      # 7️⃣ SonarCloud Scan for push events
      - name: SonarCloud Scan (push)
        if: github.event_name == 'push'
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=RADhaigude_invoice-generator-react
            -Dsonar.organization=radhaigude
            -Dsonar.sources=.

      # 8️⃣ SonarCloud Scan for pull requests
      - name: SonarCloud Scan (PR)
        if: github.event_name == 'pull_request'
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=RADhaigude_invoice-generator-react
            -Dsonar.organization=radhaigude
            -Dsonar.sources=.
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}

      # 9️⃣ Install Python for report generation
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 🔟 Generate SonarCloud Report (CSV)
      - name: Generate SonarCloud Report
        run: |
          pip install requests
          cat > sonar_report.py <<'EOF'
          import requests, csv, os

          token = os.getenv("SONAR_TOKEN")
          project = "RADhaigude_invoice-generator-react"
          url = f"https://sonarcloud.io/api/measures/component?component={project}&metricKeys=bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density"

          r = requests.get(url, auth=(token, ""))
          data = r.json()["component"]["measures"]

          with open("sonar_report.csv", "w", newline="") as f:
              writer = csv.writer(f)
              writer.writerow(["Metric", "Value"])
              for m in data:
                  writer.writerow([m["metric"], m["value"]])
          print("✅ Report saved as sonar_report.csv")
          EOF
          python sonar_report.py

      # 1️⃣1️⃣ Upload SonarCloud Report artifact
      - name: Upload SonarCloud Report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: sonar_report.csv

